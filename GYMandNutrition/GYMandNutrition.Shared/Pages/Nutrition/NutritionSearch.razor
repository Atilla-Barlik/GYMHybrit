@page "/NutritionSearch"
@inject NavigationManager Navigation
@inject INutrientService NutrientService

<h3>NutritionSearch</h3>

<div class="search-container">
    <input  @oninput="OnSearchChanged" placeholder="Search..." />
</div>

@if (!string.IsNullOrWhiteSpace(searchTerm))
{
    <div class="container mt-4">
    <div class="row">
        @foreach (var nutrient in _nutrientList)
        {

            <div class="col-md-4">
                <div class="card mb-4 shadow-sm" >
                    <img @onclick="() => NavigateToDetails(nutrient.Id)" src="@nutrient.image" class="card-img-top" alt="@nutrient.Name" style="height: 150px; object-fit: cover;"  />
                    <div class="card-body">
                        <h5 class="card-title text-center">@nutrient.Name</h5>
                        <p class="card-text">
                            <strong>Kalori:</strong> @nutrient.kcal Kcal <br />
                            <strong>Karbonhidrat:</strong> @nutrient.carbonhydrate g<br />
                            <strong>Protein:</strong> @nutrient.protein g<br />
                            <strong>Yağ:</strong> @nutrient.fat g
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
    </div>
}
else if (string.IsNullOrWhiteSpace(searchTerm))
{
    <div class="container mt-4">
        <h3>En Çok Kullanılan Besinler</h3>

        @if (_totalUsageNurition != null && _totalUsageNurition.Any())
        {
            <div class="row">
                @foreach (var nutrient in _totalUsageNurition)
                {
                    <div class="col-md-4">
                        <div class="card mb-4 shadow-sm">
                            <img src="@nutrient.NutrientImage" class="card-img-top" alt="@nutrient.NutrientName" style="height: 150px; object-fit: cover;">
                            <div class="card-body">
                                <h5 class="card-title text-center">@nutrient.NutrientName</h5>
                                <p class="card-text">
                                    <strong>Kalori:</strong> @nutrient.NutrientKcal Kcal <br />
                                    <strong>Karbonhidrat:</strong> @nutrient.NutrientCarbohydrate g <br />
                                    <strong>Protein:</strong> @nutrient.NutrientProtein g <br />
                                    <strong>Yağ:</strong> @nutrient.NutrientFat g
                                </p>
                                <p class="text-muted text-center">
                                    <small>Kullanım Sayısı: @nutrient.TotalUsageCount</small>
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-warning">
                En çok kullanılan besinler henüz bulunmamaktadır.
            </div>
        }
    </div>

    <div class="container mt-4">
        <h3>Sizin En Çok Kullandıklarınız</h3>

        @if (_userMostUsageNutrientList != null && _userMostUsageNutrientList.Any())
        {
            <div class="row">
                @foreach (var nutrient in _userMostUsageNutrientList)
                {
                    <div class="col-md-4">
                        <div class="card mb-4 shadow-sm">
                            <img src="@nutrient.NutrientImage" class="card-img-top" alt="@nutrient.NutrientName" style="height: 150px; object-fit: cover;">
                            <div class="card-body">
                                <h5 class="card-title text-center">@nutrient.NutrientName</h5>
                                <p class="card-text">
                                    <strong>Kalori:</strong> @nutrient.NutrientKcal Kcal <br />
                                    <strong>Karbonhidrat:</strong> @nutrient.NutrientCarbohydrate g <br />
                                    <strong>Protein:</strong> @nutrient.NutrientProtein g <br />
                                    <strong>Yağ:</strong> @nutrient.NutrientFat g
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-warning">
                En çok kullanılan besinler henüz bulunmamaktadır.
            </div>
        }
    </div>
}

@code {
    private string searchTerm = "";

    [Inject] IDailyNutritionDetailsService dailyNutritionDetailsService { get; set; }
    private List<NutrientResponseModel>? _nutrientList;
    private List<TotalUsageNutritionDto> _totalUsageNurition;
    private List<DailyNutritionDetailsResponseModel> _userMostUsageNutrientList;

    private void NavigateToDetails(int id)
    {
        Navigation.NavigateTo($"/NutritionDetail/{id}");
    }

    protected override async Task OnInitializedAsync()
    {

        await base.OnInitializedAsync();

        _totalUsageNurition = await dailyNutritionDetailsService.GetTotalUsageNutrition();
        _userMostUsageNutrientList = await dailyNutritionDetailsService.GetUserMostUsageNutrients(1);
        //_nutrientList = await NutrientService.GetAllNutrientList();
        _nutrientList = await NutrientService.GetNutrientDetailByName(searchTerm);

        if(searchTerm == null)
        {
            _nutrientList.Clear();
        }

    }

    private async Task OnSearchChanged(ChangeEventArgs e)
    {
        searchTerm = e.Value.ToString();
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            // Eğer arama terimi boşsa tüm ürünleri getir
            _nutrientList.Clear();
        }
        else
        {
            // Arama terimi varsa API'den sadece ilgili sonuçları getir
            _nutrientList = await NutrientService.GetNutrientDetailByName(searchTerm);
        }
    }
}

